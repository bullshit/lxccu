#!/bin/bash
# preinst script for test
#
# see: dh_installdeb(1)

set -e

# summary of how this script can be called:
#        * <new-preinst> `install'
#        * <new-preinst> `install' <old-version>
#        * <new-preinst> `upgrade' <old-version>
#        * <old-preinst> `abort-upgrade' <new-version>
# for details, see http://www.debian.org/doc/debian-policy/ or
# the debian-policy package

backup_lxccu () {
    if [ -f /opt/lxccu_backup.tar.gz ]; then
        # maybe save it on purge
        rm /opt/lxccu_backup.tar.gz
        rm /opt/lxccu_config_backup
    fi
    if lxc-info -n lxccu | grep -qs "RUNNING"
    then
        echo "shutdown lxccu"
        # @TODO when there is a rootfs symlink -> change to shutdown but test it
        lxc-stop -n lxccu  
#2>&1 > /dev/null
        echo -n "waiting for lxccu shutdown"
        timeout=30
        while [ $timeout -gt 0 ]
        do
            echo -n "."
            timeout=$(($timeout-1));sleep 1
            if lxc-info -n lxccu | grep -qs "STOPPED"
            then
                timeout=0
            fi
        done
        echo ""
        echo "lxccu shutdown complete"
    fi
    
    cd /var/lib/lxc/lxccu/root
    tar czf /opt/lxccu_backup.tar.gz usr/local
    cp /var/lib/lxc/lxccu/config /opt/lxccu_config_backup

    cd /var/lib/lxc/
    tar czf /opt/lxccu_prev_backup_`date +%s`.tar.gz lxccu/
}

case "$1" in
    install)
        # mount cgroup
        if [ $(mount | grep cgroup | wc -l) ]; then
            cgroup_mounted=$(cat /etc/fstab | grep cgroup | wc -l)
            if [ $cgroup_mounted -eq 0 ]; then
                echo "lxc /sys/fs/cgroup cgroup defaults 0 0" >> /etc/fstab
            fi
            mount -a
        fi
        
        count=$(brctl show | awk 'NR % 2 == 0' | awk '{print $1}' | wc -l)
        if [ $count -gt 0 ]; then
            exit 0
        fi

		if  ip addr show lxccubr0 > /dev/null 2>&1 ; then
			echo "Bridge already exists"
		else
            echo "Create bridge"
		DEVICES=`cat /etc/network/interfaces | grep '^iface' | grep -v "default" | grep -v "lo" | cut -d' ' -f2`
        DEVICES_LIST=`echo $DEVICES |  tr '\n' ' ' `

        for dev in $DEVICES
        do
            sed -i "s/iface ${dev} inet dhcp/#iface ${dev} inet dhcp/g" /etc/network/interfaces
        done
		cat >> /etc/network/interfaces << EOF
auto lxccubr0
iface lxccubr0 inet dhcp
  bridge_ports $DEVICES_LIST	
EOF
		ifup lxccubr0
        fi
       
    ;;

    upgrade)
        backup_lxccu
    ;;

    abort-upgrade)
    ;;

    *)
        echo "preinst called with unknown argument \`$1'" >&2
        exit 1
    ;;
esac

# dh_installdeb will replace this with shell code automatically
# generated by other debhelper scripts.

#DEBHELPER#

exit 0
